<?xml version="1.0" encoding="UTF-8" ?>
<class name="MySQL" inherits="Reference" category="Core" version="3.1">
	<brief_description>
		A MySQL connector for Godot.
	</brief_description>
	<description>
		This module is a wrapper of the Mysql connector for C ++. It works online and is also compatible with MariaDB.
	</description>
	<tutorials>
		<link>https://github.com/Malkverbena/MySQL_Module/blob/master/mysql_exemple.gd</link>
	</tutorials>
	<demos>
	</demos>
	<methods>
		<method name="connection_check">
			<return type="bool">
			</return>
			<description>
			</description>
		</method>
		<method name="connection_close">
			<return type="bool">
			</return>
			<description>
			</description>
		</method>
		<method name="connection_start">
			<return type="bool">
			</return>
			<description>
			</description>
		</method>
		<method name="get_client_options">
			<return type="String">
			</return>
			<argument index="0" name="Option" type="String">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_database">
			<return type="String">
			</return>
			<description>
			</description>
		</method>
		<method name="prep_execute">
			<return type="int">
			</return>
			<argument index="0" name="SQL_execute" type="String">
			</argument>
			<argument index="1" name="Array of values" type="Array">
			</argument>
			<description>
			</description>
		</method>
		<method name="prep_fetch_array">
			<return type="Array">
			</return>
			<argument index="0" name="SQL_query" type="String">
			</argument>
			<argument index="1" name="Array of values" type="Array">
			</argument>
			<argument index="2" name="return data as string" type="bool">
			</argument>
			<description>
			</description>
		</method>
		<method name="prep_fetch_dictionary">
			<return type="Array">
			</return>
			<argument index="0" name="SQL_query" type="String">
			</argument>
			<argument index="1" name="Array of values" type="Array">
			</argument>
			<argument index="2" name="return data as string" type="bool">
			</argument>
			<description>
			</description>
		</method>
		<method name="prep_get_columns_names">
			<return type="Array">
			</return>
			<argument index="0" name="SQL_query" type="String">
			</argument>
			<argument index="1" name="Array of values" type="Array">
			</argument>
			<description>
			</description>
		</method>
		<method name="prep_get_columns_types">
			<return type="Array">
			</return>
			<argument index="0" name="SQL_query" type="String">
			</argument>
			<argument index="1" name="Array of values" type="Array">
			</argument>
			<description>
			</description>
		</method>
		<method name="query_execute">
			<return type="int">
			</return>
			<argument index="0" name="SQL_execute" type="String">
			</argument>
			<description>
			</description>
		</method>
		<method name="query_fetch_array">
			<return type="Array">
			</return>
			<argument index="0" name="SQL_query" type="String">
			</argument>
			<argument index="1" name="return data as string" type="bool">
			</argument>
			<description>
			</description>
		</method>
		<method name="query_fetch_dictionary">
			<return type="Array">
			</return>
			<argument index="0" name="SQL_query" type="String">
			</argument>
			<argument index="1" name="return data as string" type="bool">
			</argument>
			<description>
			</description>
		</method>
		<method name="query_get_columns_names">
			<return type="Array">
			</return>
			<argument index="0" name="SQL_query" type="String">
			</argument>
			<description>
			</description>
		</method>
		<method name="query_get_columns_types">
			<return type="Array">
			</return>
			<argument index="0" name="SQL_query" type="String">
			</argument>
			<description>
			</description>
		</method>
		<method name="set_client_options">
			<return type="void">
			</return>
			<argument index="0" name="Option" type="String">
			</argument>
			<argument index="1" name="Value" type="String">
			</argument>
			<description>
			</description>
		</method>
		<method name="set_credentials">
			<return type="void">
			</return>
			<argument index="0" name="Host" type="String">
			</argument>
			<argument index="1" name="User" type="String">
			</argument>
			<argument index="2" name="Password" type="String">
			</argument>
			<description>
			</description>
		</method>
		<method name="set_database">
			<return type="void">
			</return>
			<argument index="0" name="Database" type="String">
			</argument>
			<description>
			</description>
		</method>
	</methods>
	<constants>
	</constants>
</class>
